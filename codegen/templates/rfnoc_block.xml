<!--
********************************************************************************
* Company:     Geon Technologies, LLC
* File:        rfnoc_block.xml
* Description: Auto-generated from Jinja2 RFNoC XML Template
* Generated:   {{ now }}
********************************************************************************
-->
<!-- Default XML file -->
<nocblock>
  <blockname>{{ json_params['params']|selectattr('name', 'equalto', 'IP_NAME')|map(attribute='value')|join('') }}</blockname>
  <ids>
      <id revision="0">96D967A0010119BD</id>
  </ids>
  <!-- Registers -->
  <registers>
  {%- for register in json_params['registers'] %}
    <setreg>
      <name>{{register['name']}}</name>
      <address>{{ loop.index+128 }}</address>
    </setreg>
  {%- endfor %}
  </registers>
  <!-- Args -->
  <args>
  {% for register in json_params['registers'] -%}
    <arg>
      <name>{{register['name']}}_arg</name>
      <type>double</type>
      <value>{{register['value']}}</value>
      <check>GE(${{register['name']}}_arg, {{register['min_value']}}) AND LE(${{register['name']}}_arg, {{register['max_value']}})</check>
      <check_message>Invalid {{register['name']}} value.</check_message>
      <action>
        SR_WRITE("{{register['name']}}", IROUND(${{register['name']}}_arg))
      </action>
    </arg>
  {%- endfor %}
  </args>
  <!--
     One input, one output. If this is used, better have all the info the C++ file.
  -->
  <ports>
    <sink>
      <name>in0</name>
      <type>sc16</type>
    </sink>
    <source>
      <name>out0</name>
      <type>sc16</type>
    </source>
  </ports>
</nocblock>
