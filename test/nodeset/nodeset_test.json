{
  "name":"nodeset_test",
  "is_app_nodeset":true,
  "description":"FINS Nodeset for testing",
  "version":"0.0",
  "company_name":"Geon Technologies",
  "company_url":"geon.tech",
  "company_logo":"docs/geontech_logo.png",
  "base_offset":0,
  "params": [
    { "name":"TEST_PARAM_BOOLEAN", "value":false,               "description":"This is a test parameter excercising a boolean type" },
    { "name":"TEST_PARAM_STRING",  "value":"my_nodeset_string", "description":"This is a test parameter excercising a string type" },
    { "name":"NODESET_TEST_PARAM", "value":true,                "description":"A parameter for testing FINS Nodeset TCL generated output" }
  ],
  "nodes":[
    {
      "fins_path":"../node/fins.json",
      "module_name":"fins_test_ip_0",
      "interface_name":"S_AXI_0",
      "properties_offset":0,
      "params": [
        { "name":"TEST_PARAM_BOOLEAN",         "parent": "TEST_PARAM_BOOLEAN" },
        { "name":"TEST_PARAM_STRING",          "parent": "TEST_PARAM_STRING" }
      ],
      "ports_consumer_name":"myinput",
      "ports_producer_name":"myoutput"
    },
    {
      "fins_path":"../node/ip/test_middle/fins.json",
      "module_name":"fins_test_ip_0",
      "interface_name":"S_AXI_TEST_MIDDLE_0",
      "properties_offset":65536,
      "descriptive_node":true
    },
    {
      "fins_path":"../node/ip/test_middle/ip/test_bottom/fins.json",
      "module_name":"fins_test_ip_0",
      "interface_name":"S_AXI_TEST_BOTTOM_0",
      "properties_offset":131072,
      "descriptive_node":true
    },
    {
      "fins_path":"../node/fins.json",
      "module_name":"fins_test_ip_1",
      "interface_name":"S_AXI_1",
      "properties_offset":196608,
      "params": [
        { "name":"TEST_PARAM_BOOLEAN",         "parent": "TEST_PARAM_BOOLEAN" },
        { "name":"TEST_PARAM_STRING",          "parent": "TEST_PARAM_STRING" }
      ],
      "ports_consumer_name":"myinput",
      "ports_producer_name":"myoutput"
    },
    {
      "fins_path":"../node/ip/test_middle/fins.json",
      "module_name":"fins_test_ip_1",
      "interface_name":"S_AXI_TEST_MIDDLE_1",
      "properties_offset":262144,
      "descriptive_node":true
    },
    {
      "fins_path":"../node/ip/test_middle/ip/test_bottom/fins.json",
      "module_name":"fins_test_ip_1",
      "interface_name":"S_AXI_TEST_BOTTOM_1",
      "properties_offset":327680,
      "descriptive_node":true
    }
  ],
  "connections":[
    {
      "source":{"node_name":"fins_test_ip_0", "net":"myoutput"},
      "destinations":[
        {"node_name":"fins_test_ip_1", "net":"myinput"}
      ]
    },
    {
      "source":{"node_name":"fins_test_ip_0", "net":"test_out"},
      "destinations":[
        {"node_name":"fins_test_ip_1", "net":"test_in"}
      ]
    },
    {
      "source":{"node_name":"fins_test_ip_0", "net":"sfix_cpx_out"},
      "destinations":[
        {"node_name":"fins_test_ip_1", "net":"sfix_cpx_in"}
      ]
    }
  ],
  "clocks":[
    {
      "clock":"input",
      "period_ns":2.5,
      "nets":[
        {"node_name":"fins_test_ip_0", "net":"myinput"},
        {"node_name":"fins_test_ip_0", "net":"test_in"},
        {"node_name":"fins_test_ip_0", "net":"sfix_cpx_in"}
      ]
    },
    {
      "clock":"processing",
      "period_ns":2.5,
      "nets":[
        {"node_name":"fins_test_ip_0", "net":"myoutput"},
        {"node_name":"fins_test_ip_0", "net":"test_out"},
        {"node_name":"fins_test_ip_0", "net":"sfix_cpx_out"},
        {"node_name":"fins_test_ip_1", "net":"myinput"},
        {"node_name":"fins_test_ip_1", "net":"test_in"},
        {"node_name":"fins_test_ip_1", "net":"sfix_cpx_in"}
      ]
    },
    {
      "clock":"output_aclk",
      "period_ns":2.5,
      "resetn":"output_aresetn",
      "nets":[
        {"node_name":"fins_test_ip_1", "net":"myoutput"},
        {"node_name":"fins_test_ip_1", "net":"test_out"},
        {"node_name":"fins_test_ip_1", "net":"sfix_cpx_out"}
      ]
    }
  ],
  "filesets":{
    "sim":[
      { "path":"../node/gen/core/test_top_pkg.vhd", "type":"vhdl"    },
      { "path":"../node/ip/test_middle/ip/test_bottom/gen/core/test_bottom_axilite_verify.vhd" },
      { "path":"../node/ip/test_middle/gen/core/test_middle_axilite_verify.vhd" },
      { "path":"../node/gen/core/test_top_axilite_verify.vhd", "type":"Vhdl" },
      { "path":"./gen/core/nodeset_test_axis_verify.vhd" },
      { "path":"./gen/core/nodeset_test_tb.vhd" }
    ]
  }
}
